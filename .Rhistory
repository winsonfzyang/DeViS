size = 1) +
geom_errorbar(aes(ymin=anx_m-anx_sd,ymax=anx_m+anx_sd),
position=position_dodge(.9),
size=1,
width=0.5) +
#### BOX PLOT ####
ggplot(data=df,aes(x=gender,y=imp_tot))
# Add error bars
ggplot(data=df2,aes(x=users,y=anx_m,fill=treatment)) +
geom_bar(stat="identity",
position="dodge",
color="black",
size = 1) +
geom_errorbar(aes(ymin=anx_m-anx_sd,ymax=anx_m+anx_sd),
position=position_dodge(.9),
size=1,
width=0.5) +
#### BOX PLOT ####
ggplot()
ggplot(data=df,aes(x=gender,y=mp_tot)) +
geom_boxplot()
ggplot(data=df,aes(x=gender,y=imp_tot)) +
geom_boxplot()
# See data points
ggplot(data=df,aes(x=gender,y=imp_tot)) +
geom_boxplot() +
geom_jitter()
# Add layers to it
ggplot(data=df,aes(x=gender,y=imp_tot)) +
geom_boxplot() +
geom_jitter(aes(color=treatment))
ggplot(data=df,aes(x=gender,y=imp_tot)) +
geom_boxplot(aes(color=treatment)) +
geom_jitter()
ggplot(data=df,aes(x=gender,y=imp_tot)) +
geom_boxplot(aes(color=treatment)) +
geom_jitter(aes(color=treatment))
ggplot(data=df,aes(x=gender,y=imp_tot)) +
geom_boxplot(aes(color=treatment,fill=treatment)) +
geom_jitter(aes(color=treatment))
ggplot(data=df,aes(x=gender,y=imp_tot)) +
geom_boxplot(aes(color=treatment)) +
geom_jitter(aes(color=treatment))
# Using violin plot
ggplot(data=df,aes(x=gender,y=imp_tot)) +
geom_violin(aes(color=treatment))
#### Line Graphs ####
df3 <- ToothGrowth
df3
df3 <- df3 %>%
group_by(supp,dose) %>%
summarise(len_m=mean(len))
df3
df3
# Plot the graph
ggplot(data=df3,aes(x=dose,y=len_m)) +
geom_line()
# Plot the graph
ggplot(data=df3,aes(x=dose,y=len_m,color=supp)) +
geom_line()
# Add points to the graph
ggplot(data=df3,aes(x=dose,y=len_m,color=supp)) +
geom_line() +
geom_point()
# Add points to the graph
ggplot(data=df3,aes(x=dose,y=len_m,color=supp)) +
geom_line() +
geom_point(szie=3)
# Add points to the graph
ggplot(data=df3,aes(x=dose,y=len_m,color=supp)) +
geom_line() +
geom_point(size=3)
# Add points to the graph
ggplot(data=df3,aes(x=dose,y=len_m,color=supp)) +
geom_line() +
geom_point(size=10)
# Add points to the graph
ggplot(data=df3,aes(x=dose,y=len_m,color=supp)) +
geom_line() +
geom_point(size=3,shape=21)
# Add points to the graph
ggplot(data=df3,aes(x=dose,y=len_m,color=supp)) +
geom_line() +
geom_point(size=3,shape=18)
# Add points to the graph
ggplot(data=df3,aes(x=dose,y=len_m,color=supp)) +
geom_line() +
geom_point(size=3,shape=26)
# Add points to the graph
ggplot(data=df3,aes(x=dose,y=len_m,color=supp)) +
geom_line() +
geom_point(size=3,shape=22)
# Add points to the graph
ggplot(data=df3,aes(x=dose,y=len_m,color=supp)) +
geom_line() +
geom_point(size=3,shape=supp)
# Add points to the graph
ggplot(data=df3,aes(x=dose,y=len_m,color=supp)) +
geom_line() +
geom_point(size=3,aes(shape=supp))
#### Histograms ####
ggplot(data=df,aes(x=anx_tot)) +
geom_histogram()
# Adding colors
ggplot(data=df,aes(x=anx_tot)) +
geom_histogram(fill="white")
# Adding colors
ggplot(data=df,aes(x=anx_tot)) +
geom_histogram(fill="white",color="black")
# Group historgrams
ggplot(data=df,aes(x=anx_tot,fill=gender)) +
geom_histogram(fill="white",color="black")
# Group historgrams
ggplot(data=df,aes(x=anx_tot,fill=gender)) +
geom_histogram(color="black")
# Binning
ggplot(data=df,aes(x=anx_tot,fill=gender)) +
geom_histogram(color="black", bins=60)
# Binning
ggplot(data=df,aes(x=anx_tot,fill=gender)) +
geom_histogram(color="black", bins=10)
ggplot(data=df,aes(x=imp_tot,y=anx_tot)) +
geom_points()
ggplot(data=df,aes(x=imp_tot,y=anx_tot)) +
geom_point()
# facet by column
ggplot(data=df,aes(x=imp_tot,y=anx_tot)) +
geom_point() +
facet_grid(.~ treatment)
# facet by column
ggplot(data=df,aes(x=imp_tot,y=anx_tot)) +
geom_point() +
facet_grid(.~ users)
# facet by row
ggplot(data=df,aes(x=imp_tot,y=anx_tot)) +
geom_point() +
facet_grid(users~.)
# facet by row & column
ggplot(data=df,aes(x=imp_tot,y=anx_tot)) +
geom_point() +
facet_grid(users~ treatment)
facet_grid(users~ treatment)
# facet by row & column
ggplot(data=df,aes(x=imp_tot,y=anx_tot)) +
geom_point() +
geom_smooth(method="lm",se=FALSE) +
facet_grid(users~ treatment)
# facet by row & column
ggplot(data=df,aes(x=imp_tot,y=anx_tot)) +
geom_point() +
geom_smooth(method="lm",se=FALSE, fill= "Pink") +
facet_grid(users~ treatment)
# facet by row & column
ggplot(data=df,aes(x=imp_tot,y=anx_tot)) +
geom_point() +
geom_smooth(method="lm",se=FALSE, color= "Pink") +
facet_grid(users~ treatment)
#### Beautifying your graph ####
ggplot(data=df,aes(x=imp_tot,y=anx_tot)) +
geom_point() +
geom_smooth(method="lm",se=FALSE, color= "Pink") +
facet_grid(users~ treatment) +
labs(x="Impulse score", y="Anxiety score")
#### Beautifying your graph ####
ggplot(data=df,aes(x=imp_tot,y=anx_tot)) +
geom_point() +
geom_smooth(method="lm",se=FALSE, color= "Pink") +
facet_grid(users~ treatment) +
labs(x="Impulse score",
y="Anxiety score") +
theme_classic(())
#### Beautifying your graph ####
ggplot(data=df,aes(x=imp_tot,y=anx_tot)) +
geom_point() +
geom_smooth(method="lm",se=FALSE, color= "Pink") +
facet_grid(users~ treatment) +
labs(x="Impulse score",
y="Anxiety score") +
theme_classic()
#### Beautifying your graph ####
ggplot(data=df,aes(x=imp_tot,y=anx_tot)) +
geom_point() +
geom_smooth(method="lm",se=FALSE, color= "Pink") +
facet_grid(users~ treatment) +
labs(x="Impulse score",
y="Anxiety score") +
theme_bw()
#### Correlation plots ####
library(ggcorrplot)
df4 <- mtcars
corr <- cor(mtcars)
corr
ggcorrplot(corr, hc.order = TURE,
type="lower",
lab=TRUE)
ggcorrplot(corr, hc.order = TRUE,
type="lower",
lab=TRUE)
ggcorrplot(corr, hc.order = TRUE,
#           type="lower",
lab=TRUE)
ggcorrplot(corr, hc.order = TRUE,
type="lower",
lab=TRUE)
ggcorrplot(corr, hc.order = TRUE,
type="lower",
lab=TRUE,
method="circle")
# Get tableau color
tableau10 <- c("#1F77B4","#FF7F0E","#2CA02C","#D62728","#9467BD",
"#8C564B","#E377C2","#7F7F7F","#BCBD22","#17BECF")
# Graph prep ----
# Get tableau color
tableau10 <- c("#1F77B4","#FF7F0E","#2CA02C","#D62728","#9467BD",
"#8C564B","#E377C2","#7F7F7F","#BCBD22","#17BECF")
# Get input variables
input <- list()
input$x <- "dailyactivity"
input$y <- "dass_scores"
input$colorin <- "treatment_phase"
input$scalecolor <- tableau10
input$pointstransparency <- 0.65
input$pointtypes <- 16L
input$pointsizes <- 2L
input$smoothmethod <- "lm"
input$facetx <- "treatment_phase"
input$facety <- "dass_vars"
input$facetscalesin <- "free_y"
input$facetspace <- "fixed"
input$facetlabeller <- "label_both"
input$facetmargin <- FALSE
input$themebasesize <- 16L
input$title <- "Correlation plots"
input$legendlabs <- "Patient treatment phase"
input$xlablinebreak <- "Daily activity unmet needs score"
input$ylablinebreak <- "DASS scores"
input$titleposition <- 0.5
input$legendposition <- "right"
input$legendbox <- "vertical"
input$legenddirection <- "vertical"
input$backgroundcol <- "white"
input$xaxiszoomin <- c(0L, 57L)
# Graph prep ----
df <- read.csv("D:\\Winson\\Data Science\\R\\Tutorials\\My tutorials\\atc_data.csv")
# Get tableau color
tableau10 <- c("#1F77B4","#FF7F0E","#2CA02C","#D62728","#9467BD",
"#8C564B","#E377C2","#7F7F7F","#BCBD22","#17BECF")
# Get input variables
input <- list()
input$df <- df
input$x <- "dailyactivity"
input$y <- "dass_scores"
input$colorin <- "treatment_phase"
input$scalecolor <- tableau10
input$pointstransparency <- 0.65
input$pointtypes <- 16L
input$pointsizes <- 2L
input$smoothmethod <- "lm"
input$facetx <- "treatment_phase"
input$facety <- "dass_vars"
input$facetscalesin <- "free_y"
input$facetspace <- "fixed"
input$facetlabeller <- "label_both"
input$facetmargin <- FALSE
input$themebasesize <- 16L
input$title <- "Correlation plots"
input$legendlabs <- "Patient treatment phase"
input$xlablinebreak <- "Daily activity unmet needs score"
input$ylablinebreak <- "DASS scores"
input$titleposition <- 0.5
input$legendposition <- "right"
input$legendbox <- "vertical"
input$legenddirection <- "vertical"
input$backgroundcol <- "white"
input$xaxiszoomin <- c(0L, 57L)
#### plot the graph ####
ggplot(input$df, aes_string(x = input$x, y = input$y)) +
aes_string(color = input$colorin) +
scale_colour_manual(values=input$scalecolor) +
facet_grid(reformulate(input$facety)) +
# facet_wrap(reformulate(input$facety), nrow = 2) +
geom_jitter(alpha = input$pointstransparency, shape = input$pointtypes,size = input$pointsizes) +
geom_smooth(method = input$smoothmethod,size = 1.5, se = F, aes(group = NULL)) +
labs(title = input$title, x = input$xlablinebreak, y = input$ylablinebreak, color=input$legendlabs) +
# geom_text(data = df, aes(x=1.0, y = 40,label = label), parse = TRUE) + #Log
# geom_text(data = df, aes(x=13, y = 42,label = label), parse = TRUE) +
theme_bw(base_size = input$themebasesize) +
theme(plot.title = element_text(hjust= input$titleposition),
legend.position = input$legendposition,
legend.box = input$legendbox,
legend.direction = input$legenddirection,
panel.background = element_rect(fill = input$backgroundcol),
panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
element_line(size = 1,colour = "black"))
# coord_cartesian(xlim = c(input$xaxiszoomin[1], input$xaxiszoomin[2]))
input <- list()
input$df <- df
input$x <- "anx_tot"
input$y <- "imp_tot"
input$colorin <- "gender"
input$scalecolor <- tableau10
input$pointstransparency <- 0.65
input$pointtypes <- 16L
input$pointsizes <- 2L
input$smoothmethod <- "lm"
input$facetx <- "treatment_phase"
input$facety <- "dass_vars"
input$facetscalesin <- "free_y"
input$facetspace <- "fixed"
input$facetlabeller <- "label_both"
input$facetmargin <- FALSE
input$themebasesize <- 16L
input$title <- "Correlation plots"
input$legendlabs <- "Patient treatment phase"
input$xlablinebreak <- "Daily activity unmet needs score"
input$ylablinebreak <- "DASS scores"
input$titleposition <- 0.5
input$legendposition <- "right"
input$legendbox <- "vertical"
input$legenddirection <- "vertical"
input$backgroundcol <- "white"
input$xaxiszoomin <- c(0L, 57L)
# Get tableau color
tableau10 <- c("#1F77B4","#FF7F0E","#2CA02C","#D62728","#9467BD",
"#8C564B","#E377C2","#7F7F7F","#BCBD22","#17BECF")
# Get input variables
input <- list()
input$df <- df
input$x <- "anx_tot"
input$y <- "imp_tot"
input$colorin <- "gender"
input$scalecolor <- tableau10
input$pointstransparency <- 0.65
input$pointtypes <- 16L
input$pointsizes <- 2L
input$smoothmethod <- "lm"
input$facetx <- "treatment_phase"
input$facety <- "dass_vars"
input$facetscalesin <- "free_y"
input$facetspace <- "fixed"
input$facetlabeller <- "label_both"
input$facetmargin <- FALSE
input$themebasesize <- 16L
input$title <- "Correlation plots"
input$legendlabs <- "Patient treatment phase"
input$xlablinebreak <- "Daily activity unmet needs score"
input$ylablinebreak <- "DASS scores"
input$titleposition <- 0.5
input$legendposition <- "right"
input$legendbox <- "vertical"
input$legenddirection <- "vertical"
input$backgroundcol <- "white"
input$xaxiszoomin <- c(0L, 57L)
#### plot the graph ####
ggplot(input$df, aes_string(x = input$x, y = input$y)) +
aes_string(color = input$colorin) +
scale_colour_manual(values=input$scalecolor) +
# facet_grid(reformulate(input$facety)) +
# facet_wrap(reformulate(input$facety), nrow = 2) +
geom_jitter(alpha = input$pointstransparency, shape = input$pointtypes,size = input$pointsizes) +
geom_smooth(method = input$smoothmethod,size = 1.5, se = F, aes(group = NULL)) +
labs(title = input$title, x = input$xlablinebreak, y = input$ylablinebreak, color=input$legendlabs) +
# geom_text(data = df, aes(x=1.0, y = 40,label = label), parse = TRUE) + #Log
# geom_text(data = df, aes(x=13, y = 42,label = label), parse = TRUE) +
theme_bw(base_size = input$themebasesize) +
theme(plot.title = element_text(hjust= input$titleposition),
legend.position = input$legendposition,
legend.box = input$legendbox,
legend.direction = input$legenddirection,
panel.background = element_rect(fill = input$backgroundcol),
panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
element_line(size = 1,colour = "black"))
#### plot the graph ####
ggplot(input$df, aes_string(x = input$x, y = input$y)) +
aes_string(color = input$colorin) +
scale_colour_manual(values=input$scalecolor) +
# facet_grid(reformulate(input$facety)) +
# facet_wrap(reformulate(input$facety), nrow = 2) +
geom_jitter(alpha = input$pointstransparency, shape = input$pointtypes,size = input$pointsizes) +
geom_smooth(method = input$smoothmethod,size = 1.5, se = F, aes(group = NULL)) +
labs(title = input$title, x = input$xlablinebreak, y = input$ylablinebreak, color=input$legendlabs) +
# geom_text(data = df, aes(x=1.0, y = 40,label = label), parse = TRUE) + #Log
geom_text(data = df, aes(x=13, y = 42,label = label), parse = TRUE) +
theme_bw(base_size = input$themebasesize) +
theme(plot.title = element_text(hjust= input$titleposition),
legend.position = input$legendposition,
legend.box = input$legendbox,
legend.direction = input$legenddirection,
panel.background = element_rect(fill = input$backgroundcol),
panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
element_line(size = 1,colour = "black"))
ggplot(data=df4,aes(x=Session,y=Craving_Score)) +
geom_bar(stat="identity",aes(fill=Session),color="Black") +
facet_grid(.~Substance) +
theme_bw(panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
df <- read.csv("C:\\Users\\Winson\\Desktop\\Complied Data-ATC.csv")
library(dplyr)
vars <- c("Session..","PACS...ALC","PACS...TOB","PACS...CAN")
df <- df[vars]
df2 <- df[df$Session..=="1"|df$Session..=="4"|df$Session..=="2-wk-follow",]
library(tidyr)
df3 <- gather(df2, "Substance", "Craving_Score", 2:4)
df4 <- df3 %>%
group_by(Session..,Substance) %>%
summarize(Craving_score=mean(Craving_Score),SD = sd(Craving_Score))
names(df4) <- c("Session","Substance","Craving_Score","SD")
df4$Session <- factor(df4$Session, levels=c("1","4","2-wk-follow"))
df4$Substance <- factor(df4$Substance)
levels(df4$Substance) <- c("Alcohol Craving","Cannabis Craving","Tobacco Craving")
df4 <- data.frame(df4)
library(ggplot2)
ggplot(data=df4,aes(x=Session,y=Craving_Score)) +
geom_bar(stat="identity",aes(fill=Session),color="Black") +
facet_grid(.~Substance) +
theme_bw(panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
ggplot(data=df4,aes(x=Session,y=Craving_Score)) +
geom_bar(stat="identity",aes(fill=Session),color="Black") +
facet_grid(.~Substance) +
theme_bw() +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
vars <- c("Session..","PACS...ALC","PACS...TOB","PACS...CAN")
df <- df[vars]
df2 <- df[df$Session..=="1"|df$Session..=="4"|df$Session..=="2-wk-follow",]
library(tidyr)
df3 <- gather(df2, "Substance", "Craving_Score", 2:4)
df4 <- df3 %>%
group_by(Session..,Substance) %>%
summarize(Craving_score=mean(Craving_Score),SD = sd(Craving_Score))
names(df4) <- c("Session","Substance","Craving_Score","SD")
df4$Session <- factor(df4$Session, levels=c("1","4","2-wk-follow"))
# We forgot to change this to factor
df4$Substance <- factor(df4$Substance)
levels(df4$Substance) <- c("Alcohol Craving","Cannabis Craving","Tobacco Craving")
df4 <- data.frame(df4)
library(ggplot2)
ggplot(data=df4,aes(x=Session,y=Craving_Score)) +
geom_bar(stat="identity",aes(fill=Session),color="Black") +
facet_grid(.~Substance) +
theme_bw() +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
#### Graph for Session 1,4 & 2-wk follow for CAN-CRAV ####
df4 <- df[data1$Session..=="1" | data1$Session..=="4" | data1$Session..=="2-wk-follow" ,]
#### Graph for Session 1,4 & 2-wk follow for CAN-CRAV ####
df4 <- df[df$Session..=="1" | df$Session..=="4" | df$Session..=="2-wk-follow" ,]
df5 = df4 %>%
group_by(Session..) %>%
summarise(PACS...CAN = mean(PACS...CAN),
PACS_Cansd = sd(PACS...CAN))
df5$Session.. <- factor(df5$Session.., levels=c("1","4","2-wk-follow"))
## TidyR
library(tidyr)
# Subset data first
vars <- c("Session..","PACS...ALC","PACS...TOB","PACS...CAN")
df6 <- df4[df4$Session..=="1"|df4$Session..=="4"|df4$Session..=="2-wk-follow", vars]
df6$Session.. <- factor(df6$Session..,levels = c("1","4","2-wk-follow"))
df7 <- gather(df6, "Substance", "Craving_Score", 2:4)
df8 <- df7 %>%
group_by(Session..,Substance) %>%
summarise(Craving_Score = mean(Craving_Score))
df8$Session.. <- factor(df5$Session.., levels=c("1","4","2-wk-follow"))
df8$Substance <- factor(df5$Substance)
df8
df8 <- data.frame(df8)
levels(df4$Substance)
df8$Substance <- factor(df8$Substance)
levels(df4$Substance)
df8 <- data.frame(df8)
df8
factor(df8$Substance)
df8$Substance <- factor(df8$Substance)
levels(df8$Substance) <- c("Alcohol Craving","Cannabis Craving","Tobacco Craving")
names(df)
names(df8)
names(df8) <- c("Session","Substance","Craving_Score")
#FACET
ggplot(data=df8) +
geom_bar(aes(x=Session, y=Craving_Score),stat="identity") +
facet_grid(.~Substance)
df8
#FACET
ggplot(data=df8,aes(x=Session, y=Craving_Score)) +
geom_bar(stat="identity",aes(fill=Session),color="Black") +
facet_grid(.~Substance)
df8
df <- read.csv("~/Desktop/Complied Data-ATC.csv")
library(dplyr)
vars <- c("Session..","PACS...ALC","PACS...TOB","PACS...CAN")
df <- df[vars]
df2 <- df[df$Session..=="1"|df$Session..=="4"|df$Session..=="2-wk-follow",]
library(tidyr)
df3 <- gather(df2, "Substance", "Craving_Score", 2:4)
df4 <- df3 %>%
group_by(Session..,Substance) %>%
summarize(Craving_score=mean(Craving_Score),SD = sd(Craving_Score))
names(df4) <- c("Session","Substance","Craving_Score","SD")
df4$Session <- factor(df4$Session, levels=c("1","4","2-wk-follow"))
# We forgot to change this to factor
df4$Substance <- factor(df4$Substance)
levels(df4$Substance) <- c("Alcohol Craving","Cannabis Craving","Tobacco Craving")
df4 <- data.frame(df4)
library(ggplot2)
ggplot(data=df4,aes(x=Session,y=Craving_Score)) +
geom_bar(stat="identity",aes(fill=Session),color="Black") +
facet_grid(.~Substance) +
theme_bw() +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
shiny::runApp('D:/Winson/Github/DEViS')
